services:
  prometheus:
    image: prom/prometheus:v2.49.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerting_rules.yml:/etc/prometheus/alerting_rules.yml:ro
    command: [ "--config.file=/etc/prometheus/prometheus.yml" ]
    ports:
      - "9090:9090"
    networks:
      - monitoring
  
  alertmanager:
    image: prom/alertmanager:v0.26.0
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command: [ "--config.file=/etc/alertmanager/alertmanager.yml" ]
    ports:
      - "9093:9093"
    networks:
      - monitoring
  
  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana  # Named volume for data persistence
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
  
  pushgateway:
    image: prom/pushgateway:latest
    ports:
      - "9091:9091"
    networks:
      - monitoring
  
  machine_learning:
    image: cgordondev/machine_learning:latest
    environment:
      PROMETHEUS_URL: http://prometheus:9090
      PUSHGATEWAY_URL: http://pushgateway:9091
    depends_on:
      - prometheus
      - pushgateway
    networks:
      - monitoring
  
  node_exporter:
    image: prom/node-exporter:v1.6.0
    ports:
      - "9100:9100"
    networks:
      - monitoring
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/kmsg:/dev/kmsg
    networks:
      - monitoring
  
  log-analytics-agent:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        AGENT_NAME: log-analytics
    volumes:
      - ./logs:/agent/logs  # Mount logs directory for analysis
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PROMETHEUS_URL: http://prometheus:9090
    depends_on:
      - prometheus
    networks:
      - monitoring

  monitoring-agent:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        AGENT_NAME: monitoring
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PROMETHEUS_URL: http://prometheus:9090
    depends_on:
      - prometheus
    networks:
      - monitoring

  reporting-agent:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        AGENT_NAME: reporting
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      REGION_NAME: ${AWS_REGION}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - log-analytics-agent
      - monitoring-agent
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  grafana-data: